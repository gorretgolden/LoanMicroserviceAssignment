version: '3'
services:
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/8.0
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.0/app
        ports:
            - '${APP_PORT:-8000}:80'  # Updated to port 8000
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            DB_CONNECTION: 'pgsql'  # Added for PostgreSQL
            DB_HOST: 'postgres'  # Database service name
            DB_PORT: '5432'
            DB_DATABASE: '${DB_DATABASE}'
            DB_USERNAME: '${DB_USERNAME}'
            DB_PASSWORD: '${DB_PASSWORD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - postgres  # Updated from mysql to postgres
            - redis
            # - selenium
    # selenium:
    #     image: 'selenium/standalone-chrome'
    #     volumes:
    #         - '/dev/shm:/dev/shm'
    #     networks:
    #         - sail
    postgres:
        image: 'postgres:13'  # PostgreSQL image
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'  # Forward PostgreSQL port
        environment:
            POSTGRES_USER: '${DB_USERNAME}'  # Use existing env variables
            POSTGRES_PASSWORD: '${DB_PASSWORD}'
            POSTGRES_DB: '${DB_DATABASE}'
        volumes:
            - sailpostgres:/var/lib/postgresql/data  # Volume for PostgreSQL
        networks:
            - sail
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sailredis:/data'
        networks:
            - sail
    # memcached:
    #     image: 'memcached:alpine'
    #     ports:
    #         - '11211:11211'
    #     networks:
    #         - sail
    mailhog:
        image: 'mailhog/mailhog:latest'
        ports:
            - 1025:1025
            - 8025:8025
        networks:
            - sail
    npm:
        build:
            context: .  # Use the current context
            dockerfile: Dockerfile-node  # Use a separate Dockerfile for Node.js
        container_name: npm_app
        depends_on:
            - laravel.test
        volumes:
            - '.:/var/www/html'
        command: >
            sh -c "npm install &&
                   npm run dev"
        networks:
            - sail

networks:
    sail:
        driver: bridge

volumes:
    sailpostgres:
        driver: local  # Volume for PostgreSQL
    sailredis:
        driver: local
